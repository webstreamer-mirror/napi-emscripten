{
    "&binding_utils::createMat": "select_overload<MyClass *(int, int, int, intptr_t, size_t)>(&binding_utils::createMat)",
    "&cv::Mat::rows": "int,cv::Mat::rows",
    "&cv::Mat::cols": "int,cv::Mat::cols",
    "&binding_utils::getMatSize": "select_overload<val(const cv::Mat&)>(&binding_utils::getMatSize)",
    "&binding_utils::getMatStep": "select_overload<val(const cv::Mat&)>(&binding_utils::getMatStep)",
    "&binding_utils::matData<unsigned char>": "select_overload<val(const cv::Mat&)>(&binding_utils::matData<unsigned char>)",
    "&binding_utils::matData<char>": "select_overload<val(const cv::Mat&)>(&binding_utils::matData<char>)",
    "&binding_utils::matData<unsigned short>": "select_overload<val(const cv::Mat&)>(&binding_utils::matData<unsigned short>)",
    "&binding_utils::matData<short>": "select_overload<val(const cv::Mat&)>(&binding_utils::matData<short>)",
    "&binding_utils::matData<int>": "select_overload<val(const cv::Mat&)>(&binding_utils::matData<int>)",
    "&binding_utils::matData<float>": "select_overload<val(const cv::Mat&)>(&binding_utils::matData<float>)",
    "&binding_utils::matData<double>": "select_overload<val(const cv::Mat&)>(&binding_utils::matData<double>)",
    "template": [
        "template <typename T>extern val matData(const cv::Mat &mat);",
        "template <typename T>extern val matPtr(const cv::Mat &mat, int i);",
        "template <typename T>extern val matPtr(const cv::Mat &mat, int i, int j);"
    ],
    "class": [
        "class MinMaxLoc\n     {\n     public:\n         double minVal;\n         double maxVal;\n         Point minLoc;\n         Point maxLoc;\n     };",
        "class Circle\n     {\n     public:\n         Point2f center;\n         float radius;\n     };"
      ],
    "&cv::Range::start": "int,cv::Range::start",
    "&cv::Range::end": "int,cv::Range::end",
    "&cv::TermCriteria::type": "int,cv::TermCriteria::type",
    "&cv::TermCriteria::maxCount": "int,cv::TermCriteria::maxCount",
    "&cv::TermCriteria::epsilon": "double,cv::TermCriteria::epsilon",
    "&Size::width": "int,Size::width",
    "&Size::height": "int,Size::height",
    "&Size2f::width": "float,Size2f::width",
    "&Size2f::height": "float,Size2f::height",
    "&Point::x": "int,Point::x",
    "&Point::y": "int,Point::y",
    "&Point2f::x": "float,Point2f::x",
    "&Point2f::y": "float,Point2f::y",
    "&cv::Rect_<int>::x": "int,cv::Rect_<int>::x",
    "&cv::Rect_<int>::y": "int,cv::Rect_<int>::y",
    "&cv::Rect_<int>::width": "int,cv::Rect_<int>::width",
    "&cv::Rect_<int>::height": "int,cv::Rect_<int>::height",
    "&cv::Rect_<float>::x": "float,cv::Rect_<float>::x",
    "&cv::Rect_<float>::y": "float,cv::Rect_<float>::y",
    "&cv::Rect_<float>::width": "float,cv::Rect_<float>::width",
    "&cv::Rect_<float>::height": "float,cv::Rect_<float>::height",
    "&cv::RotatedRect::center": "Point2f,cv::RotatedRect::center",
    "&cv::RotatedRect::size": "Size2f,cv::RotatedRect::size",
    "&cv::RotatedRect::angle": "float,cv::RotatedRect::angle",
    "&binding_utils::MinMaxLoc::minVal": "double,binding_utils::MinMaxLoc::minVal",
    "&binding_utils::MinMaxLoc::maxVal": "double,binding_utils::MinMaxLoc::maxVal",
    "&binding_utils::MinMaxLoc::minLoc": "Point,binding_utils::MinMaxLoc::minLoc",
    "&binding_utils::MinMaxLoc::maxLoc": "Point,binding_utils::MinMaxLoc::maxLoc",
    "&binding_utils::Circle::center": "Point2f,binding_utils::Circle::center",
    "&binding_utils::Circle::radius": "float,binding_utils::Circle::radius",
    "&cv::Moments::m00": "double,cv::Moments::m00",
    "&cv::Moments::m10": "double,cv::Moments::m10",
    "&cv::Moments::m01": "double,cv::Moments::m01",
    "&cv::Moments::m20": "double,cv::Moments::m20",
    "&cv::Moments::m11": "double,cv::Moments::m11",
    "&cv::Moments::m02": "double,cv::Moments::m02",
    "&cv::Moments::m30": "double,cv::Moments::m30",
    "&cv::Moments::m21": "double,cv::Moments::m21",
    "&cv::Moments::m12": "double,cv::Moments::m12",
    "&cv::Moments::m03": "double,cv::Moments::m03",
    "&cv::Moments::mu20": "double,cv::Moments::mu20",
    "&cv::Moments::mu11": "double,cv::Moments::mu11",
    "&cv::Moments::mu02": "double,cv::Moments::mu02",
    "&cv::Moments::mu30": "double,cv::Moments::mu30",
    "&cv::Moments::mu21": "double,cv::Moments::mu21",
    "&cv::Moments::mu12": "double,cv::Moments::mu12",
    "&cv::Moments::mu03": "double,cv::Moments::mu03",
    "&cv::Moments::nu20": "double,cv::Moments::nu20",
    "&cv::Moments::nu11": "double,cv::Moments::nu11",
    "&cv::Moments::nu02": "double,cv::Moments::nu02",
    "&cv::Moments::nu30": "double,cv::Moments::nu30",
    "&cv::Moments::nu21": "double,cv::Moments::nu21",
    "&cv::Moments::nu12": "double,cv::Moments::nu12",
    "&cv::Moments::nu03": "double,cv::Moments::nu03",
    "&cv::Exception::code": "int,cv::Exception::code",
    "&binding_utils::getExceptionMsg": "select_overload<std::string(const cv::Exception&)>(&binding_utils::getExceptionMsg)",
    "&binding_utils::setExceptionMsg": "select_overload<void(cv::Exception&, std::string)>(&binding_utils::setExceptionMsg)"
}